library(dplyr)
# this is the raw data file but with the header and footer sections describing data reuse / provenance
data_cc = read.csv('e120_Plant aboveground biomass data no header footer.txt',sep = '\t')
names_planted = (data_cc %>% select(Achmi:Sornu) %>% names)
names_planted
length(names_planted)
write.csv(names_planted,'~/Downloads/np.csv')
19.87+36.19
56.06/4
library(ggplot2)
library(tidyr)
library(dplyr)
library(data.table)
library(wesanderson)
library(tibble)
library(ggpubr)
library(MuMIn)
library(caret)
library(visreg)
library(lme4)
library(vegan)
library(RColorBrewer)
library(MuMIn)
if (!file.exists('outputs_figures'))
{
dir.create('outputs_figures')
}
fn_outputs = dir('outputs_statistical',pattern="result.*\\.csv",full.names = TRUE)
df_all = rbindlist(lapply(1:length(fn_outputs), function(i)
{
df_this = read.csv(fn_outputs[i])
name_this = gsub("\\.csv","",gsub("results_","",basename(fn_outputs[i])))
df_this$name = name_this
return(df_this)
}))
nice_names = c(`annual_plant`="Annual plant",
`cedar_creek_plants`="Cedar Creek",
`fly_gut`="Fly gut",
`glv_simulated`="GLV simulated",
`human_gut`="Human gut",
`mouse_gut`="Mouse gut",
`sortie-nd_plants`="SORTIE-ND",
`soil_bacteria`="Soil bacteria"
)
# add NA removal counts
source('quantile_trim.R')
fns = c(`cedar_creek_plants`='data_cedar_creek/cedar_creek_2018.csv',
`sortie-nd_plants`='data_sortie/data_sortie.csv',
`human_gut`='data_glv/assemblages_H_12.csv',
`mouse_gut`='data_glv/assemblages_M_11.csv',
`glv_simulated`='data_glv/assemblages_glv_16.csv',
`annual_plant`='data_annual_plant/assemblages_annual_plant_18.csv',
`fly_gut`='data_fly/data_fly.csv',
`soil_bacteria`='data_friedman_gore/data_friedman_gore.csv')
row_counts = sapply(fns, function(x) {nrow(read.csv(x))})
row_counts_trimmed = sapply(fns, function(x) {
data = read.csv(x)
data = quantile_max_trim(data)
counts = data %>%
select(contains("star")) %>%
na.omit %>%
nrow
return(counts)
})
num_nas = row_counts - row_counts_trimmed
# add some additional info
df_all = df_all %>%
mutate(nice_name = nice_names[name]) %>%
mutate(empirical=name %in% c("cedar_creek_plants","fly_gut","soil_bacteria")) %>%
mutate(num_na = num_nas[name]) %>%
mutate(num_states = row_counts[name]) %>%
mutate(richness_scaled_mae_test = richness_mae_test / num_species_dataset) %>%
mutate(abundance_scaled_mae_test = abundance_mae_mean_test / abundance_q95_dataset)
# calculate stats
df_all_stats = df_all %>%
select(nice_name,
num_species_dataset,
num_replicates_dataset,
num_states,
num_na,
empirical) %>%
unique %>%
arrange(nice_name)
write.csv(df_all_stats,'outputs_figures/table_dataset_stats.csv',row.names=F)
library(ggplot2)
library(tidyr)
library(dplyr)
library(data.table)
library(wesanderson)
library(tibble)
library(ggpubr)
library(MuMIn)
library(caret)
library(visreg)
library(lme4)
library(vegan)
library(RColorBrewer)
library(MuMIn)
if (!file.exists('outputs_figures'))
{
dir.create('outputs_figures')
}
fn_outputs = dir('outputs_statistical',pattern="result.*\\.csv",full.names = TRUE)
